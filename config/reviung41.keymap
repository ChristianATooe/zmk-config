/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  O  |  Y  |  P  |  Ö  |   |  ß  |  C   |  L  |  M  |  X  |   -  |
// |   K  |  H  |  A  |  E  |  I  |  .  |   |  G  |  T   |  N  |  R  |  S  |   F  |
// |  ALT |  Z  |  Ä  |  Ü  |  U  |  ,  |   |  B  |  D   |  V  |  W  |  J  | ALTGR|
//                | DEL | SHFT(BSPC) | LWR |  GUI(SPC) | CTRL(RET) |
                        bindings = <
   &kp TAB &kp Q &kp O   &kp Z    &kp P &kp SEMI        &kp MINUS &kp C &kp L &kp M &kp X &kp SLASH
   &kp K   &kp H &kp A   &kp E    &kp I &kp DOT         &kp G     &kp T &kp N &kp R &kp S &kp F
  &kp LALT &kp Y &kp SQT &kp LBKT &kp U &kp COMMA       &kp B     &kp D &kp V &kp W &kp J &kp RALT
                        &kp DEL
                        &mt RSHFT BSPC 
                        &to 1
                        &mt LGUI SPACE  
                        &mt RCTRL RET
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// |  ^  |  {  |  }  |  <  |  >  |  !  |   |  '  |  4  |  5  |  6  |  -  |   /  |
// |  @  |  [  |  ]  |  (  |  )  |  .  |   |  0  |  1  |  2  |  3  |  +  |   *  |
// | ALT | ADJ |  /  |  ?  |  =  |  ,  |   |  "  |  7  |  8  |  9  | RET | ALTGR|
//                 | DEL | SHFT(BSPC) | RAI |  GUI(SPC) | CTRL(RET) |
                        bindings = <
   &kp GRAVE &kp RA(N7) &kp RA(N0) &kp NON_US_BSLH &kp RS(NON_US_BSLH) &kp RS(N1)     &kp LS(BSLH) &kp KP_N4 &kp KP_N5 &kp KP_N6  &kp KP_MINUS &kp KP_DIVIDE
   &kp RA(Q) &kp RA(N8) &kp RA(N9) &kp RS(N8)      &kp RS(N9)          &kp DOT        &kp KP_N0    &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_PLUS  &kp LS(RBKT)
   &kp LALT  &to 3      &kp SLASH  &kp RS(MINUS)   &kp RS(N0)          &kp COMMA      &kp LS(N2)   &kp KP_N7 &kp KP_N8 &kp KP_N9  &kp RET      &kp RALT
                        &to 0
                        &mt RSHFT BSPC 
                        &to 2
                        &mt LGUI SPACE  
                        &mt RCTRL RET
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | ESC |     | HOME |  UP  |  END |      |   |     |  F1  |  F2  |  F3  |  F4  | PSCRN|
// | CAPS| INS | LEFT | DOWN | RIGHT| PGUP |   |     |  F5  |  F6  |  F7  |  F8  |      |
// | ALT | ADJ |      |      |      | PGDN |   |     |  F9  |  F10 |  F11 |  F12 | ALTGR|
//                 | DEL | SHFT(BSPC) | LWR |  GUI(SPC) | CTRL(RET) |
//                        bindings = <
//    &kp ESC  &kp none &kp HOME &kp UP_ARROW   &kp END   &kp none      &kp none &kp F1 &kp F2  &kp F3  &kp F4  &kp PSCRN
//    &kp CAPS &kp INS  &kp LEFT &kp DOWN &kp RIGHT &kp PG_UP     &kp none &kp F5 &kp F6  &kp F7  &kp F8  &kp none
//    &kp LALT &to 3    &kp none &kp none &kp none  &kp PG_DN     &kp none &kp F9 &kp F10 &kp F11 &kp F12 &kp RALT
//                        &to 0
//                          &mt RSHFT BSPC 
//                          &to 1
//                          &mt LGUI SPACE  
//                          &mt RCTRL RET
//                          >;
//                };
                        bindings = <
   &kp GRAVE &kp RA(N7) &kp RA(N0) &kp NON_US_BSLH &kp RS(NON_US_BSLH) &kp RS(N1)     &kp LS(BSLH) &kp KP_N4 &kp KP_N5 &kp KP_N6  &kp KP_MINUS &kp KP_DIVIDE
   &kp RA(Q) &kp RA(N8) &kp RA(N9) &kp RS(N8)      &kp RS(N9)          &kp DOT        &kp KP_N0    &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_PLUS  &kp LS(RBKT)
   &kp LALT  &to 3      &kp SLASH  &kp RS(MINUS)   &kp RS(N0)          &kp COMMA      &kp LS(N2)   &kp KP_N7 &kp KP_N8 &kp KP_N9  &kp RET      &kp RALT
                        &to 0
                        &mt RSHFT BSPC 
                        &to 1
                        &mt LGUI SPACE  
                        &mt RCTRL RET
                        >;
                };
                       
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
                          bindings = <
     &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
     &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &kp N3        &none        &none        &none        &none
     &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &none        &none
                          &to 0
                          &mt RSHFT BSPC 
                          &to 1
                          &mt LGUI SPACE  
                          &mt RCTRL RET
                          >;
                };
        };
};
//                lower_layer {
// ----------------------------------------------------------------------------------
// |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
// |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
// |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
//                       |     |     | RET |     | ADJ |
//                        bindings = <
//   &trans &kp EXCL  &kp AT      &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp N8    &kp LPAR  &kp RPAR  &kp DEL
//   &trans &kp MINUS &kp KP_PLUS &kp LBRC &kp RBRC &kp PIPE       &kp LEFT  &kp DOWN &kp UP    &kp RIGHT &kp GRAVE &kp TILDE
//   &trans &kp ESC   &kp LGUI    &kp LALT &kp CLCK &kp DQT        &kp HOME  &kp END  &kp PG_UP &kp PG_DN &kp PSCRN &mt RSHFT RET
//                                 &trans      &trans       &kp RET       &trans        &mo 3
//                        >;
//                };
//               raise_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                       | ADJ |     | BKSP |    |     |
//                        bindings = <
//   &trans &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
//   &trans &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH      &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6
//   &trans &kp ESC   &kp LGUI  &kp RALT  &kp CLCK  &kp DQT       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
//                                &mo 3       &trans      &kp BSPC        &trans      &trans
//                        >;
//                };
                      