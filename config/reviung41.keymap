/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  O  |  Y  |  P  |  Ö  |###|  ß  |  C   |  L  |  M  |  X  |  ESC |
// |   K  |  H  |  A  |  E  |  I  |  .  |###|  G  |  T   |  N  |  R  |  S  |   F  |
// |  ALT |  Z  |  Ä  |  Ü  |  U  |  ,  |###|  B  |  D   |  V  |  W  |  J  | ALTGR|
//                | DEL | SHFT(BSPC) | @1@ |  GUI(SPC) | CTRL(RET) |
                        bindings = <
   &kp TAB &kp Q &kp O   &kp Z    &kp P &kp SEMI           &kp MINUS &kp C &kp L &kp M &kp J &kp ESC
   &kp K   &kp H &kp A   &kp E    &kp I &mt LS(SLASH) DOT  &kp G     &kp T &kp N &kp R &kp S &kp F
  &kp LALT &kp Y &kp SQT &kp LBKT &kp U &kp COMMA          &kp B     &kp D &kp V &kp W &kp X &kp RALT
                          &kp DEL &mt RSHFT BSPC    &to 1    &mt RCTRL SPACE &mt LGUI RET
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// |  ^  |  {  |  }  |  <  |  >  |  !  |###|  '  |  4  |  5  |  6  |  -  |   /  |
// |  @  |  [  |  ]  |  (  |  )  |  .  |###|  0  |  1  |  2  |  3  |  +  |   *  |
// | ALT | ADJ |  /  |  ?  |  =  |  ,  |###|  "  |  7  |  8  |  9  | RET | ALTGR|
//                 | @0@ | SHFT(BSPC) | @2@ |  GUI(SPC) | CTRL(RET) |
                        bindings = <
   &kp GRAVE &kp RA(N7) &kp RA(N0) &kp NON_US_BSLH &kp RS(NON_US_BSLH) &kp RS(N1)       &kp LS(BSLH) &kp N4 &kp N5 &kp N6  &kp KP_MINUS &kp KP_DIVIDE
   &kp RA(Q) &kp RA(N8) &kp RA(N9) &kp RS(N8)      &kp RS(N9)          &kp DOT          &kp N0       &kp N1 &kp N2 &kp N3  &kp KP_PLUS  &kp KP_MULTIPLY
   &kp LALT  &to 3      &kp SLASH  &kp RS(MINUS)   &kp RS(N0)          &kp COMMA        &kp LS(N2)   &kp N7 &kp N8 &kp N9  &kp RET      &kp RALT
                                                          &to 0 &mt RSHFT BSPC    &to 2    &mt RCTRL SPACE &mt LGUI RET
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | ESC | INS  | PSCRN |    | PGUP | CAPS|###|  ~  |  *  |  #  |     |     |      |
// | HOME| LEFT | DOWN  | UP | RIGHT| END |###|  §  |  €  |  $  |  %  |  &  |   |  |
// | ALT | ADJ  |       |    | PGDN |     |###| C+A | C+Z | C+V | C+C | C+X | ALTGR|
//                    | @0@ | SHFT(BSPC) | @1@ |  GUI(SPC) | CTRL(RET) |
                        bindings = <
   &kp ESC  &kp INS  &kp PSCRN &none  &kp PGUP  &kp CAPS         &kp RA(RBKT) &kp RS(RBKT) &kp BSLH   &none      &none      &none
   &kp HOME &kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp END          &kp RS(N3)   &kp RA(E)    &kp RS(N4) &kp RS(N5) &kp RS(N6) &kp RA(RS(NON_US_BSLH))
   &kp LALT &to 3    &none     &none  &kp PGDN  &none            &kp LC(A)    &kp LC(Z)    &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp RALT
                                  &to 0 &mt RSHFT BSPC    &to 1    &mt RCTRL SPACE &mt LGUI RET
                        >;
                };
                       
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | ESC |   F1   |   F2   |   F3  |   F4    | V UP |###| VUP |  MS LE  | MS UP |  MS RI  |   F9   |  F10  | 
// | RST | M LEFT | M DOWN | M  UP | M RIGHT | V MU |###| VMU | MCLK LE | MS DN | MCLK RI |   F11  |  F12  | 
// | ALT |   F5   |   F6   |   F7  |   F8    | V DN |###| VDN |   BT1   |  BT2  |  BT3    | BT CLR | ALTGR |
//                              | @0@ | SHFT(BSPC) | @1@ |  GUI(SPC) | CTRL(RET) |
                          bindings = <
     &kp ESC  &kp F1         &kp F2         &kp F3       &kp F4            &kp C_NEXT        &kp C_VOL_UP &mwh SCROLL_LEFT &mwh SCROLL_UP   &mwh SCROLL_RIGHT &kp F9       &kp F10
     &reset   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT   &kp C_PP  	     &kp C_MUTE   &mkp LCLK        &mwh SCROLL_DOWN &mkp RCLK         &kp F11      &kp F12
     &kp LALT &kp F5         &kp F6         &kp F7       &kp F8            &kp C_PREV        &kp C_VOL_DN &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_CLR   &kp RALT
                                                               &to 0 &mt RSHFT BSPC    &to 1    &mt RCTRL SPACE &mt LGUI RET
                          >;
                };
        };
};                      